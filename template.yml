AWSTemplateFormatVersion: 2010-09-09
Transform: AWS::Serverless-2016-10-31

Description: >
  aws-serverless-tracking-pixel

  This solution deploys a lambda function and an API Gateway HTTP API to process tracking information from the HTTP request, 
  returning a 1x1 transparent pixel so it can be invoked from an IMG HTML tag

Parameters:
  DomainName:
    Type: String
    Description: 'Domain name traffic should be routed to'
  CertificateArn:
    Type: String
  HostedZoneID:
    Type: String
    Description: 'Hosted zone ID domain is part of'

Resources:
  AnalyticsEndpoint:
    Type: AWS::Serverless::Function
    DependsOn: DeliveryStream
    Properties:
      CodeUri: analytics-lambda
      Handler: dist/index.handler
      Runtime: nodejs12.x
      AutoPublishAlias: live
      Events:
        AnalyticsAPI:
          Type: Api
          Properties:
            RestApiId: !Ref ApiGateway
            Path: /track
            Method: get
      Role: !GetAtt LambdaEdgeFunctionRole.Arn

  Distribution:
    Type: AWS::CloudFront::Distribution
    Properties:
      DistributionConfig:
        Enabled: 'true'
        Comment: 'Anlytics for Lambda@Edge'
        Origins:
          -
            Id: LambdaOrigin
            DomainName: aws.amazon.com
            CustomOriginConfig:
              HTTPPort: 80
              OriginProtocolPolicy: match-viewer
        ViewerCertificate:
          AcmCertificateArn: !Ref CertificateArn
          SslSupportMethod: 'sni-only'      
        DefaultCacheBehavior:
          TargetOriginId: LambdaOrigin
          MinTTL: 0
          MaxTTL: 0
          DefaultTTL: 0
          LambdaFunctionAssociations:
            - 
              EventType: origin-request
              LambdaFunctionARN: !Ref AnalyticsEndpoint.Version
          ForwardedValues:
            QueryString: 'false'
            Headers:
              - Origin
            Cookies:
              Forward: none
          ViewerProtocolPolicy: allow-all
  
  DistributionAlias:
    Type: AWS::Route53::RecordSetGroup
    Properties:
      HostedZoneId: !Ref HostedZoneID
      RecordSets:
        - Name: !Ref DomainName
          Type: A
          AliasTarget:
            HostedZoneId: Z2FDTNDATAQYW2
            DNSName: !GetAtt Distribution.DomainName

  ApiGateway:
    Type: AWS::Serverless::Api
    Properties:
      Cors: "'*'"
      StageName: Prod

  ApiGatewayDomainName:
    Type: AWS::ApiGateway::DomainName
    Properties:
      CertificateArn: !Ref CertificateArn
      DomainName: !Ref DomainName
      EndpointConfiguration:
        Types:
          - EDGE

  ApiGatewayMapping:
    Type: AWS::ApiGateway::BasePathMapping
    DependsOn:
      - ApiGateway
    Properties:
      DomainName: !Ref DomainName
      RestApiId: !Ref ApiGateway
      Stage: !Ref ApiGateway.Stage

  GlueDatabase:
    Type: AWS::Glue::Database
    Properties:
      CatalogId: !Ref AWS::AccountId
      DatabaseInput: {}

  GlueTable:
    Type: AWS::Glue::Table
    Properties:
      CatalogId: !Ref AWS::AccountId
      DatabaseName: !Ref GlueDatabase
      TableInput:
        Name: data_firehose
        Owner: owner
        Retention: 0
        StorageDescriptor:
          Location: !Join
            - ""
            - - "s3://"
              - !Ref S3bucket
              - "/"
          Columns:
            - Name: date
              Type: datetime
            - Name: ip
              Type: string
            - Name: useragent
              Type: string
            - Name: country
              Type: string  
          InputFormat: org.apache.hadoop.hive.ql.io.parquet.MapredParquetInputFormat
          OutputFormat: org.apache.hadoop.hive.ql.io.parquet.MapredParquetOutputFormat
          Compressed: false
          NumberOfBuckets: -1
          SerdeInfo:
            SerializationLibrary: org.apache.hadoop.hive.ql.io.parquet.serde.ParquetHiveSerDe
            Parameters:
              serialization.format: "1"
          BucketColumns: []
          SortColumns: []
          StoredAsSubDirectories: false
        PartitionKeys:
          - Name: year
            Type: string
          - Name: month
            Type: string
          - Name: day
            Type: string
          - Name: hour
            Type: string
        TableType: EXTERNAL_TABLE
        Parameters:
          compressionType: none
          classification: parquet

  GlueCrawler:
    Type: AWS::Glue::Crawler
    Properties:
      Name: "analytics-crawler"
      Role: !GetAtt GlueRole.Arn
      DatabaseName: !Ref GlueDatabase
      Targets:
        S3Targets:
          - Path: !Join 
            - ''
            - - !Ref S3bucket
              - "/"
              - !Ref GlueTable
      SchemaChangePolicy:
        UpdateBehavior: "UPDATE_IN_DATABASE"
        DeleteBehavior: "LOG"
      # Schedule:
      #   ScheduleExpression: "cron(0/10 * ? * MON-FRI *)"


  DeliveryStream:
    Type: AWS::KinesisFirehose::DeliveryStream
    Properties:
      DeliveryStreamName: AnalyticsDeliveryStream
      DeliveryStreamType: DirectPut
      ExtendedS3DestinationConfiguration:
        RoleARN: !GetAtt DeliveryRole.Arn
        BucketARN: !GetAtt S3bucket.Arn
        Prefix: !Join 
          - ''
          - - !Ref GlueTable
            -  '/year=!{timestamp:YYYY}/month=!{timestamp:MM}/day=!{timestamp:dd}/hour=!{timestamp:HH}/'
        ErrorOutputPrefix: !Join 
          - ''
          - - !Ref GlueTable
            -  'error/!{firehose:error-output-type}/year=!{timestamp:YYYY}/month=!{timestamp:MM}/day=!{timestamp:dd}/hour=!{timestamp:HH}/'
        BufferingHints:
          SizeInMBs: 64
          IntervalInSeconds: 300
        CompressionFormat: UNCOMPRESSED
        EncryptionConfiguration:
          NoEncryptionConfig: NoEncryption
        CloudWatchLoggingOptions:
          Enabled: true
          LogGroupName: !Join
            - ""
            - - "KDF-"
              - !Ref GlueTable
          LogStreamName: S3Delivery
        S3BackupMode: Disabled
        DataFormatConversionConfiguration:
          SchemaConfiguration:
            CatalogId: !Ref AWS::AccountId
            RoleARN: !GetAtt DeliveryRole.Arn
            DatabaseName: !Ref GlueDatabase
            TableName: !Ref GlueTable
            Region: !Ref AWS::Region
            VersionId: LATEST
          InputFormatConfiguration:
            Deserializer:
              OpenXJsonSerDe: {}
          OutputFormatConfiguration:
            Serializer:
              ParquetSerDe: {}
          Enabled: True

  S3bucket:
    Type: AWS::S3::Bucket
    Properties:
      VersioningConfiguration:
        Status: Enabled

  DeliveryRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: 2012-10-17
        Statement:
          - Sid: ""
            Effect: Allow
            Principal:
              Service: 
              - firehose.amazonaws.com
            Action: "sts:AssumeRole"
            Condition:
              StringEquals:
                "sts:ExternalId": !Ref "AWS::AccountId"
      Path: "/"
      Policies:
        - PolicyName: firehose_delivery_policy
          PolicyDocument:
            Version: 2012-10-17
            Statement:
              - Effect: Allow
                Action:
                  - "s3:AbortMultipartUpload"
                  - "s3:GetBucketLocation"
                  - "s3:GetObject"
                  - "s3:ListBucket"
                  - "s3:ListBucketMultipartUploads"
                  - "s3:PutObject"
                Resource:
                  - !Join
                    - ""
                    - - "arn:aws:s3:::"
                      - !Ref S3bucket
                  - !Join
                    - ""
                    - - "arn:aws:s3:::"
                      - !Ref S3bucket
                      - "/*"
              - Effect: Allow
                Action: "glue:GetTableVersions"
                Resource: "*"
              - Effect: Allow
                Action: "logs:PutLogEvents"
                Resource:
                  - !Join
                    - ""
                    - - "arn:aws:logs:"
                      - !Ref "AWS::Region"
                      - ":"
                      - !Ref "AWS::AccountId"
                      - "log-group:/aws/kinesisfirehose/KDF-"
                      - !Ref GlueTable
                      - ":log-stream:*"
        - PolicyName: AthenaAccess
          PolicyDocument:
            Statement:
              - Effect: Allow
                Action: athena:*
                Resource: "*"

  GlueRole: 
    Type: AWS::IAM::Role
    Properties:
      Path: "/"
      ManagedPolicyArns:
          - "arn:aws:iam::aws:policy/service-role/AWSGlueServiceRole"
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
          -
            Sid: "AllowGlueServiceToAssumeRole"
            Effect: "Allow"
            Action: 
              - "sts:AssumeRole"
            Principal:
              Service:
                - "glue.amazonaws.com"
    
  LambdaEdgeFunctionRole:
      Type: AWS::IAM::Role
      Properties:
          Path: "/"
          ManagedPolicyArns:
              - "arn:aws:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
          AssumeRolePolicyDocument:
            Version: "2012-10-17"
            Statement:
              -
                Sid: "AllowLambdaServiceToAssumeRole"
                Effect: "Allow"
                Action: 
                  - "sts:AssumeRole"
                Principal:
                  Service: 
                    - "lambda.amazonaws.com"
                    - "edgelambda.amazonaws.com"  

  LambdaEdgeFunctionPolicy:
    Type: AWS::IAM::Policy
    Properties:
      PolicyDocument:
        Statement:
        - Effect: Allow
          Action:
          - 'firehose:PutRecord'
          Resource: !GetAtt DeliveryStream.Arn
      PolicyName: lambda
      Roles:
      - !Ref LambdaEdgeFunctionRole

  GluePolicy:
    Type: AWS::IAM::Policy
    Properties:
      PolicyDocument:
        Statement:
        - Effect: Allow
          Action:
          - 's3:GetObject'
          - 's3:PutObject'
          Resource:
              - !Join
                - ""
                - - "arn:aws:s3:::"
                  - !Ref S3bucket
              - !Join
                - ""
                - - "arn:aws:s3:::"
                  - !Ref S3bucket
                  - "/*"
      PolicyName: glue
      Roles:
      - !Ref GlueRole

Outputs:
  deliverysreamARN:
    Description: The ARN of the firehose delivery stream
    Value: !GetAtt DeliveryStream.Arn
  AnalyticsAPIURL:
    Description: API Gateway endpoint URL
    Value: !Sub "https://${ApiGateway}.execute-api.${AWS::Region}.amazonaws.com/analytics"
